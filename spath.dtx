% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
spath --- Functions for manipulating PGF soft paths
E-mail: stacey@math.ntnu.no
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

This package defines some functions used to manipulate PGFs soft paths.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
spath --- Functions for manipulating PGF soft paths
E-mail: stacey@math.ntnu.no
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2011 by Andrew Stacey <stacey@math.ntnu.no>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Andrew Stacey.

This work consists of the file  spath.dtx
and the derived files           spath.ins,
                                spath.pdf, and
                                spath.sty.

\endpostamble
\usedir{tex/latex/spath}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/spath}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/demopkg}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{spath}[2011/06/03 v1.0 Functions for manipulating PGF soft paths]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
%\usepackage{morefloats}
\usepackage{tikz}
\usepackage{\jobname}
\usepackage[numbered]{hypdoc}
\definecolor{lstbgcolor}{rgb}{0.9,0.9,0.9} 
 
\usepackage{listings}
\lstloadlanguages{[LaTeX]TeX}
\lstset{breakatwhitespace=true,breaklines=true,language=TeX}
 
\usepackage{fancyvrb}

\newenvironment{example}
  {\VerbatimEnvironment
   \begin{VerbatimOut}[gobble=2]{example.out}}
  {\end{VerbatimOut}
   \begin{center}
%   \setlength{\parindent}{0pt}
   \fbox{\begin{minipage}{.9\linewidth}
     \lstset{breakatwhitespace=true,breaklines=true,language=TeX,basicstyle=\small}
     \lstinputlisting[]{example.out}
   \end{minipage}}

   \fbox{\begin{minipage}{.9\linewidth}
     \input{example.out}
   \end{minipage}}
\end{center}
}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2011/05/03}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \providecommand*{\url}{\texttt}
% \GetFileInfo{spath.dtx}
% \title{The \textsf{spath} package}
% \author{Andrew Stacey \\ \url{stacey@math.ntnu.no}}
% \date{\fileversion~from \filedate}
%
%
% \maketitle
%
% 
% \section{Introduction}
%
% \StopEventually{}
%
% \section{Implementation}
%
% \iffalse
%<*package>
% \fi
%
% Set up tokens for comparision
%    \begin{macrocode}
\long\def\ge@addto@macro#1#2{%
  \begingroup
  \toks@\expandafter\expandafter\expandafter{\expandafter#1#2}%
  \xdef#1{\the\toks@}%
  \endgroup}

\long\def\ge@addbefore@macro#1#2{%
  \begingroup
  \toks@\expandafter\expandafter\expandafter{\expandafter#2#1}%
  \xdef#1{\the\toks@}%
  \endgroup}

\long\def\g@addbefore@macro#1#2{%
  \def\@temp{#2}
  \ge@addbefore@macro{#1}{\@temp}}

\def\spath@define@transfer#1\relax{%
  \expandafter\gdef\csname spath@tr@#1\endcsname##1##2{%
    \pgf@xa=##1\relax
    \pgf@ya=##2\relax
    \advance\pgf@xa by \spath@trx
    \advance\pgf@ya by \spath@try
    \edef\spath@tmp{\expandafter\noexpand\csname pgfsyssoftpath@#1token\endcsname{\the\pgf@xa}{\the\pgf@ya}}
    \ge@addto@macro\spath@tmppath\spath@tmp
  }
}

\def\spath@define@length#1\relax{%
  \expandafter\gdef\csname spath@len@#1\endcsname##1##2{%
    \stepcounter{spath@length}
  }
}

\def\spath@define@components#1\relax{%
  \expandafter\gdef\csname spath@comp@#1\endcsname##1##2{%
  }
}

\def\spath@define@reallength#1\relax{%
  \expandafter\gdef\csname spath@rlen@#1\endcsname##1##2{%
  }
}

\def\spath@define@reverse#1\relax{%
  \expandafter\gdef\csname spath@rev@#1\endcsname##1##2{%
    \edef\spath@tmp{{##1}{##2}\expandafter\noexpand\csname pgfsyssoftpath@#1token\endcsname}
    \ge@addbefore@macro\spath@tmppath\spath@tmp
  }
}

\def\spath@define@start#1\relax{%
  \expandafter\gdef\csname spath@start@#1\endcsname##1##2{%
    \spath@sx=##1\relax
    \spath@sy=##2\relax
    \spath@start@reinit
  }
}

\def\spath@define@end#1\relax{%
  \expandafter\gdef\csname spath@end@#1\endcsname##1##2{%
    \spath@ex=##1\relax
    \spath@ey=##2\relax
  }
}

\def\spath@define@array#1\relax{%
  \expandafter\gdef\csname spath@array@#1\endcsname##1##2{%
    \edef\spath@tmp{\expandafter\noexpand\csname       pgfsyssoftpath@#1token\endcsname{##1}{##2}}
    \ge@addto@macro\spath@tmppath\spath@tmp
  }
}

\def\spath@define@prepare#1\relax{%
  \expandafter\gdef\csname spath@prepare@#1\endcsname##1##2{%
    \edef\spath@tmp{\expandafter\noexpand\csname       pgfsyssoftpath@#1token\endcsname{##1}{##2}}
    \ge@addto@macro\spath@tmppath\spath@tmp
  }
}

\let\spath@translate@init=\pgfutil@empty
\let\spath@length@init=\pgfutil@empty
\let\spath@components@init=\pgfutil@empty
\let\spath@reallength@init=\pgfutil@empty
\let\spath@reverse@init=\pgfutil@empty
\let\spath@start@init=\pgfutil@empty
\let\spath@start@reinit=\pgfutil@empty
\let\spath@end@init=\pgfutil@empty
\let\spath@array@init=\pgfutil@empty
\let\spath@prepare@init=\pgfutil@empty

\def\spath@closepath{closepath}

\foreach \spath@cpt in {
  moveto,
  lineto,
  curvetosupporta,
  curvetosupportb,
  curveto,
  rectcorner,
  rectsize,
  closepath%
} {
  \ifx\spath@cpt\spath@closepath
  \let\spath@cptfull\spath@cpt
  \else
  \edef\spath@cptfull{\spath@cpt token}
  \fi
% Save token names for comparision
\expandafter\xdef\csname spath@\spath@cpt\endcsname{\expandafter\string\csname pgfsyssoftpath@\spath@cptfull\endcsname}

% Translation
\expandafter\spath@define@transfer\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@tr@\spath@cpt \endcsname}

\ge@addto@macro\spath@translate@init\spath@tmp

% Counting total length
\expandafter\spath@define@length\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@len@\spath@cpt \endcsname}

\ge@addto@macro\spath@length@init\spath@tmp

% Counting components
\expandafter\spath@define@components\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@comp@\spath@cpt \endcsname}

\ge@addto@macro\spath@components@init\spath@tmp

% Counting real length
\expandafter\spath@define@reallength\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@rlen@\spath@cpt \endcsname}

\ge@addto@macro\spath@reallength@init\spath@tmp

% Reversal
\expandafter\spath@define@reverse\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@rev@\spath@cpt \endcsname}

\ge@addto@macro\spath@reverse@init\spath@tmp

% Initial coordinates
\expandafter\spath@define@start\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@start@\spath@cpt \endcsname}

\ge@addto@macro\spath@start@init\spath@tmp

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\noexpand\@gobbletwo}

\ge@addto@macro\spath@start@reinit\spath@tmp

% Final coordinates
\expandafter\spath@define@end\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@end@\spath@cpt \endcsname}

\ge@addto@macro\spath@end@init\spath@tmp

% Split in to array
\expandafter\spath@define@array\spath@cpt\relax

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@array@\spath@cpt \endcsname}

\ge@addto@macro\spath@array@init\spath@tmp

% Prepare a path: split it, reverse the components, figure out endpoints
% Actions are too complicated to specify a template so just create initialisation code

\edef\spath@tmp{\noexpand\let\expandafter\noexpand\csname pgfsyssoftpath@\spath@cptfull\endcsname=\expandafter\noexpand\csname spath@prepare@\spath@cpt \endcsname}

\ge@addto@macro\spath@prepare@init\spath@tmp
}

% Correction for counting components: count movetos
\def\spath@comp@moveto#1#2{%
  \stepcounter{spath@length}
}

% Correction for counting real length: count linetos and curvetos
\def\spath@rlen@lineto#1#2{%
  \stepcounter{spath@length}
}
\def\spath@rlen@curveto#1#2{%
  \stepcounter{spath@length}
}

% Correction for reversing curvetos
\def\spath@rev@curvetosupporta#1#2{%
  \edef\spath@tmp{{#1}{#2}\noexpand\pgfsyssoftpath@curvetotoken}
  \ge@addbefore@macro\spath@tmppath\spath@tmp
}
\def\spath@rev@curvetosupportb#1#2{%
  \edef\spath@tmp{{#1}{#2}\noexpand\pgfsyssoftpath@curvetosupportbtoken}
  \ge@addbefore@macro\spath@tmppath\spath@tmp
}
\def\spath@rev@curveto#1#2{%
  \edef\spath@tmp{{#1}{#2}\noexpand\pgfsyssoftpath@curvetosupportatoken}
  \ge@addbefore@macro\spath@tmppath\spath@tmp
}

% Correction for reversing closepaths
\def\spath@rev@closepath#1#2{%
  \edef\spath@tmp{\noexpand\pgfsyssoftpath@closepath{#1}{#2}}
  \ge@addto@macro\spath@tmppath\spath@tmp
}

% Correction for splitting in to an array
\def\spath@array@moveto#1#2{%
  \ifx\spath@tmppath\pgfutil@empty
  \else
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}\endcsname=\spath@tmppath
   \def\spath@tmppath{\pgfsyssoftpath@movetotoken{#1}{#2}}
  \fi
  \stepcounter{spath@array}
}

% Preparing a path: splitting, reversing, endpoints
\def\spath@prepare@moveto#1#2{%
  \ifx\spath@tmppath\pgfutil@empty
  \else
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}\endcsname=\spath@tmppath
   \g@addbefore@macro\spath@tmppathrev{\pgfsyssoftpath@movetotoken}
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}@rev\endcsname=\spath@tmppathrev
   \expandafter\xdef\csname spath@array@\spath@path@name @\the\value{spath@array}@end\endcsname{\noexpand\pgfqpoint{\the\spath@ex}{\the\spath@ey}}
   \expandafter\xdef\csname spath@array@\spath@path@name @\the\value{spath@array}@length\endcsname{\the\value{spath@length}}
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}@first\endcsname=\spath@first
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}@last\endcsname=\spath@last
  \fi
   \def\spath@tmppath{\pgfsyssoftpath@movetotoken{#1}{#2}}
   \def\spath@tmppathrev{{#1}{#2}}
   \let\spath@first=\pgfutil@empty
   \let\spath@last=\pgfutil@empty
  \stepcounter{spath@array}
  \expandafter\xdef\csname spath@array@\spath@path@name @\the\value{spath@array}@start\endcsname{\noexpand\pgfqpoint{#1}{#2}}
  \spath@ex=#1\relax
  \spath@ey=#2\relax
  \setcounter{spath@length}{0}
}

\def\spath@prepare@lineto#1#2{%
  \g@addto@macro\spath@tmppath{\pgfsyssoftpath@linetotoken{#1}{#2}}
  \g@addbefore@macro\spath@tmppathrev{{#1}{#2}\pgfsyssoftpath@linetotoken}
  \spath@ex=#1\relax
  \spath@ey=#2\relax
  \stepcounter{spath@length}
  \let\spath@last\spath@lineto
  \ifx\spath@first\pgfutil@empty
  \let\spath@first\spath@lineto
  \fi
}

\def\spath@prepare@curveto#1#2{%
  \g@addto@macro\spath@tmppath{\pgfsyssoftpath@curvetotoken{#1}{#2}}
  \g@addbefore@macro\spath@tmppathrev{{#1}{#2}\pgfsyssoftpath@curvetosupportatoken}
  \spath@ex=#1\relax
  \spath@ey=#2\relax
  \stepcounter{spath@length}
  \let\spath@last\spath@curveto
  \ifx\spath@first\pgfutil@empty
  \let\spath@first\spath@curveto
  \fi
}

\def\spath@prepare@curvetosupporta#1#2{%
  \g@addto@macro\spath@tmppath{\pgfsyssoftpath@curvetosupportatoken{#1}{#2}}
  \g@addbefore@macro\spath@tmppathrev{{#1}{#2}\pgfsyssoftpath@curvetotoken}
  \spath@ex=#1\relax
  \spath@ey=#2\relax
}

\def\spath@prepare@curvetosupportb#1#2{%
  \g@addto@macro\spath@tmppath{\pgfsyssoftpath@curvetosupportbtoken{#1}{#2}}
  \g@addbefore@macro\spath@tmppathrev{{#1}{#2}\pgfsyssoftpath@curvetosupportbtoken}
  \spath@ex=#1\relax
  \spath@ey=#2\relax
}

% Also need to handle the closepath variants

\newdimen\spath@trx
\newdimen\spath@try
\newdimen\spath@sx
\newdimen\spath@sy
\newdimen\spath@ex
\newdimen\spath@ey
\newcounter{spath@length}
\newcounter{spath@array}

\def\spath@translate#1#2#3{%
  \let\spath@tmppath=\pgfutil@empty
  \begingroup
  \spath@trx=#2\relax
  \spath@try=#3\relax
  \spath@translate@init
  #1
  \endgroup
}

\def\spath@length#1{%
  \setcounter{spath@length}{0}
  \begingroup
  \spath@length@init
  #1
  \endgroup
}

\def\spath@components#1{%
  \setcounter{spath@length}{0}
  \begingroup
  \spath@components@init
  #1
  \endgroup
}

\def\spath@reallength#1{%
  \setcounter{spath@length}{0}
  \begingroup
  \spath@reallength@init
  #1
  \endgroup
}

\def\spath@reverse#1{%
  \let\spath@tmppath=\pgfutil@empty
  \begingroup
  \spath@reverse@init
  #1
  \g@addbefore@macro\spath@tmppath\pgfsyssoftpath@movetotoken
  \expandafter\spath@trimlast\spath@tmppath\relax
  \endgroup
}

\def\spath@trimlast#1\pgfsyssoftpath@movetotoken\relax{\gdef\spath@tmppath{#1}}

\def\spath@start#1{%
  \begingroup
  \spath@start@init
  #1
  \global\spath@sx=\spath@sx
  \global\spath@sy=\spath@sy
  \endgroup
}

\def\spath@end#1{%
  \begingroup
  \spath@end@init
  #1
  \global\spath@ex=\spath@ex
  \global\spath@ey=\spath@ey
  \endgroup
}

\def\spath@cat#1#2{
  \let\spath@tmppath=#1
  \expandafter\spath@trimfirst#2\relax
  \ge@addto@macro\spath@tmppath\spath@trimmed@path
}

\def\spath@trimfirst#1#2#3#4\relax{%
  \edef\this@action{\string#1}%
  \ifx\this@action\spath@moveto
  \def\spath@trimmed@path{#4}%
  \else
  \def\spath@trimmed@path{#1{#2}{#3}#4}%
  \fi
}

\def\spath@array#1#2{
  \let\spath@tmppath=\pgfutil@empty
  \begingroup
  \setcounter{spath@array}{0}
  \def\spath@path@name{#2}
  \spath@array@init
  #1
  \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}\endcsname=\spath@tmppath
  \expandafter\xdef\csname spath@array@\spath@path@name @length\endcsname{\the\value{spath@array}}
  \endgroup
}

\def\spath@prepare#1#2{
  \let\spath@tmppath=\pgfutil@empty
  \let\spath@tmppathrev=\pgfutil@empty
  \begingroup
  \setcounter{spath@array}{0}
  \setcounter{spath@length}{0}
  \def\spath@path@name{#2}
  \spath@prepare@init
  #1
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}\endcsname=\spath@tmppath
   \g@addbefore@macro\spath@tmppathrev\pgfsyssoftpath@movetotoken
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}@rev\endcsname=\spath@tmppathrev
   \expandafter\xdef\csname spath@array@\spath@path@name @\the\value{spath@array}@end\endcsname{\noexpand\pgfqpoint{\the\spath@ex}{\the\spath@ey}}
  \expandafter\xdef\csname spath@array@\spath@path@name @length\endcsname{\the\value{spath@array}}
  \expandafter\xdef\csname spath@array@\spath@path@name @\the\value{spath@array}@length\endcsname{\the\value{spath@length}}
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}@first\endcsname=\spath@first
   \expandafter\global\expandafter\let\csname spath@array@\spath@path@name @\the\value{spath@array}@last\endcsname=\spath@last
  \endgroup
}
%    \end{macrocode}
%
% Workflow for tapering: we get a path name and component number
% Examine its real length; if less than three we need to split it
% (This can modify the original path)
% Next, if we are tapering we need to split in to pieces
% (This shouldn't modify the original path)
% Then taper the pieces
% Lastly, return the middle section for ordinary drawing
% So our return code should be *three* separate paths
%
% \begin{macro}{\spath@taper}
%    \begin{macrocode}
\newif\ifspath@taper@end
\newif\ifspath@taper@start
\def\spath@taper#1#2{%
  \expandafter\ifx\csname spath@array@#1@#2\endcsname\relax
  \else
   \ifnum\csname spath@array@#1@#2@length\endcsname<3\relax
    \spath@split{#1}{#2}%
   \fi
   \ifspath@taper@end
    \expandafter\spath@separate@end\csname spath@array@#1@#2\endcsname
    \spath@taper@in\spath@taper@path@end
    \pgfsyssoftpath@setcurrentpath{\spath@taper@path@end}
    \pgfsyssoftpath@flushcurrentpath
    \pgfusepath{fill}
   \else
    \expandafter\let\spath@taper@path@middle\csname spath@array@#1@#2\endcsname
   \fi
   \ifspath@taper@start
    \spath@separate@start\spath@taper@path@middle
    \spath@taper@out\spath@taper@path@start
    \pgfsyssoftpath@setcurrentpath{\spath@taper@path@start}
    \pgfsyssoftpath@flushcurrentpath
    \pgfusepath{fill}
   \fi
  \pgfsyssoftpath@setcurrentpath{\spath@taper@path@middle}
  \pgfsyssoftpath@flushcurrentpath
  \pgfsetlinewidth{\the\pgflinewidth}
  \pgfusepath{stroke}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\spath@split}
%    \begin{macrocode}
\def\spath@split#1#2{
  \ifnum\csname spath@array@#1@#2@length\endcsname=1\relax
% Length 1
   \expandafter\ifx\csname spath@array@#1@#2@start\endcsname\spath@lineto
% lineto
    \expandafter\expandafter\expandafter\spath@split@single@lineto\csname spath@array@#1@#2\endcsname\relax
   \else
% curveto
    \expandafter\expandafter\expandafter\spath@split@single@curveto\csname spath@array@#1@#2\endcsname\relax
   \fi
% save split path to original path
   \expandafter\global\expandafter\let\csname spath@array@#1@#2\endcsname\spath@tmppath
% new path has length 3
   \expandafter\gdef\csname spath@array@#1@#2@length\endcsname{3}%
  \else
% Length 2
   \expandafter\ifx\csname spath@array@#1@#2@start\endcsname\spath@lineto
% Starts with lineto
    \expandafter\expandafter\expandafter\spath@split@first@lineto\csname spath@array@#1@#2\endcsname\relax
   \else
% Starts with curveto
    \expandafter\expandafter\expandafter\spath@split@first@curveto\csname spath@array@#1@#2\endcsname\relax
   \fi
% Ends with lineto
    \expandafter\spath@split@second@lineto\spath@split@path@end\relax
   \else
% Ends with curveto
    \expandafter\spath@split@second@curveto\spath@split@path@end\relax
   \fi
% Save split path
   \expandafter\global\expandafter\let\csname spath@array@#1@#2\endcsname\spath@split@path@start
   \expandafter\ge@addto@macro\csname spath@array@#1@#2\endcsname\spath@split@path@end
% Length is now 4
   \expandafter\gdef\csname spath@array@#1@#2@length\endcsname{4}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\spath@separate@start}
%    \begin{macrocode}
\def\spath@separate@start\pgfsyssoftpath@movetotoken#1#2#3#4#5#6\relax{
  \def\spath@taper@path@start{\pgfsyssoftpath@movetotoken{#1}{#2}#3{#4}{#5}}
  \ifx#3\spath@curvetosupporta
   \spath@separate@@start#6\relax
  \else
  \def\spath@taper@path@middle{#6}
  \fi
}
\def\spath@separate@@start\pgfsyssoftpath@curvetosuportbtoken#1#2\pgfsyssoftpath@curvetotoken#3#4#5\relax{
  \g@addto@macro\spath@taper@path@start{\pgfsyssoftpath@curvetosuportbtoken{#1}{#2}\pgfsyssoftpath@curvetotoken{#3}{#4}}
  \def\spath@taper@path@middle{#5}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\spath@taper@out}
%    \begin{macrocode}
\def\spath@taper@out#1{%
  \expandafter\spath@find@taper@type#1\relax
  \ifx\spath@taper@type\spath@lineto
   \expandafter\spath@taper@lineto@out#1\relax
  \else
  \ifx\spath@taper@type\spath@curvetosupporta
   \expandafter\spath@taper@curveto@out#1\relax
  \fi
  \fi
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@taper@in}
%    \begin{macrocode}
\def\spath@taper@in#1{%
  \expandafter\spath@find@taper@type#1\relax
  \ifx\spath@taper@type\spath@lineto
   \expandafter\spath@taper@lineto@in#1\relax
  \else
  \ifx\spath@taper@type\spath@curvetosupporta
   \expandafter\spath@taper@curveto@in#1\relax
  \fi
  \fi
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@find@taper@type}
%    \begin{macrocode}
\def\spath@find@taper@type#1#2#3#4#5#6#7\relax{%
  \edef\spath@taper@type{\string#4}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@taper@lineto@out}
%    \begin{macrocode}
\def\spath@taper@lineto@out#1#2#3#4#5#6#7\relax{%
% #1 is \pgfsyssoftpath@movetotoken
% #2 is x-coord of starting point
% #3 is y-coord of starting point
% #4 is \pgfsyssoftpath@linetotoken
% #5 is x-coord of ending point
% #6 is y-coord of ending point
% #7 shouldn't have anything in
  \pgfmathsetmacro{\spath@sx}{.7 * #2 + .3 * #5}
  \pgfmathsetmacro{\spath@sy}{.7 * #3 + .3 * #6}
  \pgfmathsetmacro{\spath@ex}{.3 * #2 + .7 * #5}
  \pgfmathsetmacro{\spath@ey}{.3 * #3 + .7 * #6}
  \edef\spath@tmp{\noexpand\spath@taper@path{#2}{#3}{\spath@sx pt}{\spath@sy pt}{\spath@ex pt}{\spath@ey pt}{#5}{#6}}
  \spath@tmp
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@taper@curveto@out}
%    \begin{macrocode}
\def\spath@taper@curveto@out\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@curvetosupportatoken#3#4\pgfsyssoftpath@curvetosupportbtoken#5#6\pgfsyssoftpath@curvetotoken#7#8#9\relax{%
  \spath@taper@path{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@taper@lineto@in}
%    \begin{macrocode}
\def\spath@taper@lineto@in#1#2#3#4#5#6#7\relax{%
% #1 is \pgfsyssoftpath@movetotoken
% #2 is x-coord of starting point
% #3 is y-coord of starting point
% #4 is \pgfsyssoftpath@linetotoken
% #5 is x-coord of ending point
% #6 is y-coord of ending point
% #7 shouldn't have anything in
  \pgfmathsetmacro{\spath@sx}{.7 * #2 + .3 * #5}
  \pgfmathsetmacro{\spath@sy}{.7 * #3 + .3 * #6}
  \pgfmathsetmacro{\spath@ex}{.3 * #2 + .7 * #5}
  \pgfmathsetmacro{\spath@ey}{.3 * #3 + .7 * #6}
  \edef\spath@tmp{\noexpand\spath@taper@path{#5}{#6}{\spath@ex pt}{\spath@ey pt}{\spath@sx pt}{\spath@sy pt}{#2}{#3}}
  \spath@tmp
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@taper@curveto@in}
%    \begin{macrocode}
\def\spath@taper@curveto@in\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@curvetosupportatoken#3#4\pgfsyssoftpath@curvetosupportbtoken#5#6\pgfsyssoftpath@curvetotoken#7#8#9\relax{%
  \spath@taper@path{#7}{#8}{#5}{#6}{#3}{#4}{#1}{#2}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@taper@path}
%    \begin{macrocode}
\def\spath@taper@path#1#2#3#4#5#6#7#8{
% #1 is x-coord of starting point
% #2 is y-coord of starting point
% #3 is x-coord of first control point
% #4 is y-coord of first control point
% #5 is x-coord of second control point
% #6 is y-coord of second control point
% #7 is x-coord of ending point
% #8 is y-coord of ending point
%
  \edef\spath@sx{#1}
  \edef\spath@sy{#2}
  \edef\spath@cx{#3}
  \edef\spath@cy{#4}
  \edef\spath@dx{#5}
  \edef\spath@dy{#6}
  \edef\spath@ex{#7}
  \edef\spath@ey{#8}
  
%    \end{macrocode}
% Orthogonal vector at end
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@ox}{-\spath@ey + \spath@dy}
  \pgfmathsetmacro{\spath@oy}{\spath@ex - \spath@dx}
  
%    \end{macrocode}
% Orthogonal vector at start
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@sox}{\spath@sy - \spath@cy}
  \pgfmathsetmacro{\spath@soy}{-\spath@sx + \spath@cx}
  
%    \end{macrocode}
% Adjust length to half the line width
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@oox}{.5*\spath@ox * \pgflinewidth / veclen(\spath@ox,\spath@oy)}
  \pgfmathsetmacro{\spath@ooy}{.5*\spath@oy * \pgflinewidth / veclen(\spath@ox,\spath@oy)}
  
%    \end{macrocode}
% Adjust length to half the thinner line width
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@soox}{.5*\spath@sox * \pgfkeysvalueof{/pgf/calligraphy/taper line width} / veclen(\spath@sox,\spath@soy)}
  \pgfmathsetmacro{\spath@sooy}{.5*\spath@soy * \pgfkeysvalueof{/pgf/calligraphy/taper line width} / veclen(\spath@sox,\spath@soy)}
%    \end{macrocode}
% Shift the end point and the control points
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@dx}{\spath@dx + \spath@oox}
  \pgfmathsetmacro{\spath@dy}{\spath@dy + \spath@ooy}
%    \end{macrocode}
% Shift the start point and the control points
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@cx}{\spath@cx + \spath@soox}
  \pgfmathsetmacro{\spath@cy}{\spath@cy + \spath@sooy}
  \pgfmathsetmacro{\spath@sx}{\spath@sx + \spath@soox}
  \pgfmathsetmacro{\spath@sy}{\spath@sy + \spath@sooy}
%    \end{macrocode}
% End points are shifted slightly to overlap the next component
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@ex}{\spath@ex + \spath@oox + .1*\spath@ooy}
  \pgfmathsetmacro{\spath@ey}{\spath@ey + \spath@ooy - .1*\spath@oox}
%    \end{macrocode}
% Add the first pieces
%    \begin{macrocode}
  \let\spath@tapered@path=\pgfutil@empty
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@movetotoken{\spath@sx pt}{\spath@sy pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx pt}{\spath@cy pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetotoken{\spath@ex pt}{\spath@ey pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
%    \end{macrocode}
% Shift the end points and the control points again
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@dx}{\spath@dx - 2*\spath@oox}
  \pgfmathsetmacro{\spath@dy}{\spath@dy - 2*\spath@ooy}
  \pgfmathsetmacro{\spath@ex}{\spath@ex - 2*\spath@oox}
  \pgfmathsetmacro{\spath@ey}{\spath@ey - 2*\spath@ooy}
  \pgfmathsetmacro{\spath@cx}{\spath@cx - 2*\spath@soox}
  \pgfmathsetmacro{\spath@cy}{\spath@cy - 2*\spath@sooy}
  \pgfmathsetmacro{\spath@sx}{\spath@sx - 2*\spath@soox}
  \pgfmathsetmacro{\spath@sy}{\spath@sy - 2*\spath@sooy}
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@linetotoken{\spath@ex pt}{\spath@ey pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@dx pt}{\spath@dy pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@cx pt}{\spath@cy pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetotoken{\spath@sx pt}{\spath@sy pt}}
  \ge@addto@macro\spath@tapered@path\spath@to@add
%    \end{macrocode}
% Close the path, ought to make it rounded
%    \begin{macrocode}
  \g@addto@macro{\spath@tapered@path}{\pgfsyssoftpath@closepath}
}
%    \end{macrocode}
% \end{macro}
%
% The following have been modified to fit the new routines
%
% \begin{macro}{\spath@single@split}
%    \begin{macrocode}
\def\spath@single@split{.3}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\spath@split@single@lineto}
%    \begin{macrocode}
\def\spath@split@single@lineto\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@linetotoken#3#4#5\relax{%
  \pgfmathsetmacro{\spath@sx}{(1-\spath@single@split)*#1 + \spath@single@split * #3}
  \pgfmathsetmacro{\spath@sy}{(1-\spath@single@split)*#2 + \spath@single@split * #4}
  \pgfmathsetmacro{\spath@ex}{(1-\spath@single@split)*#3 + \spath@single@split * #1}
  \pgfmathsetmacro{\spath@ey}{(1-\spath@single@split)*#4 + \spath@single@split * #2}
  \edef\spath@tmppath{\noexpand\pgfsyssoftpath@movetotoken{#1}{#2}\noexpand\pgfsyssoftpath@linetotoken{\spath@sx     pt}{\spath@sy pt}\noexpand\pgfsyssoftpath@linetotoken{\spath@ex pt}{\spath@ey pt}\noexpand\pgfsyssoftpath@linetotoken{#3}{#4}}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@split@single@curveto}
%    \begin{macrocode}
\def\spath@split@single@curveto\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@curvetosupportatoken#3#4\pgfsyssoftpath@curvetosupportbtoken#5#6\pgfsyssoftpath@curvetotoken#7#8#9\relax{%
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@single@split)*#1 + \spath@single@split * #3}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@single@split)*#2 + \spath@single@split * #4}
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@single@split)^2 * #1 + 2*\spath@single@split * (1 - \spath@single@split) * #3 + \spath@single@split^2 * #5}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@single@split)^2 * #2 + 2*\spath@single@split * (1 - \spath@single@split) * #4 + \spath@single@split^2 * #6}
  \pgfmathsetmacro{\spath@ex}{(1 - \spath@single@split)^3 * #1 + 3*\spath@single@split * (1 - \spath@single@split)^2 * #3 + 3*\spath@single@split^2 * (1 - \spath@single@split) * #5 + \spath@single@split^3 * #7}
  \pgfmathsetmacro{\spath@ey}{(1 - \spath@single@split)^3 * #2 + 3*\spath@single@split * (1 - \spath@single@split)^2 * #4 + 3*\spath@single@split^2 * (1 - \spath@single@split) * #6 + \spath@single@split^3 * #8}
  \edef\spath@tmppath{\noexpand\pgfsyssoftpath@movetotoken{#1}{#2}\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{\spath@ex pt}{\spath@ey pt}}
%    \end{macrocode}
% Should be some sort of optimisation to do here
%    \begin{macrocode}
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@single@split)^2*\spath@single@split * #1 + (1 - 3 * \spath@single@split + 5 * \spath@single@split^2 - 3 * \spath@single@split^3) * #3 + (2 * \spath@single@split - 4 * \spath@single@split^2 + 3 * \spath@single@split^3) * #5 + \spath@single@split^2 * (1 - \spath@single@split) * #7}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@single@split)^2*\spath@single@split * #2 + (1 - 3 * \spath@single@split + 5 * \spath@single@split^2 - 3 * \spath@single@split^3) * #4 + (2 * \spath@single@split - 4 * \spath@single@split^2 + 3 * \spath@single@split^3) * #6 + \spath@single@split^2 * (1 - \spath@single@split) * #8}
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@single@split)^2*\spath@single@split * #7 + (1 - 3 * \spath@single@split + 5 * \spath@single@split^2 - 3 * \spath@single@split^3) * #5 + (2 * \spath@single@split - 4 * \spath@single@split^2 + 3 * \spath@single@split^3) * #3 + \spath@single@split^2 * (1 - \spath@single@split) * #1}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@single@split)^2*\spath@single@split * #8 + (1 - 3 * \spath@single@split + 5 * \spath@single@split^2 - 3 * \spath@single@split^3) * #6 + (2 * \spath@single@split - 4 * \spath@single@split^2 + 3 * \spath@single@split^3) * #4 + \spath@single@split^2 * (1 - \spath@single@split) * #2}
  \pgfmathsetmacro{\spath@ex}{\spath@single@split^3 * #1 + 3 * \spath@single@split^2 * (1 - \spath@single@split) * #3 + 3 * \spath@single@split * (1 - \spath@single@split)^2 * #5 + (1 - \spath@single@split)^3 * #7}
  \pgfmathsetmacro{\spath@ey}{\spath@single@split^3 * #2 + 3 * \spath@single@split^2 * (1 - \spath@single@split) * #4 + 3 * \spath@single@split * (1 - \spath@single@split)^2 * #6 + (1 - \spath@single@split)^3 * #8}
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{\spath@ex pt}{\spath@ey pt}}
  \ge@addto@macro\spath@split@path\spath@to@add
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@single@split)*#7 + \spath@single@split * #5}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@single@split)*#8 + \spath@single@split * #6}
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@single@split)^2 * #7 + 2*\spath@single@split * (1 - \spath@single@split) * #5 + \spath@single@split^2 * #3}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@single@split)^2 * #8 + 2*\spath@single@split * (1 - \spath@single@split) * #6 + \spath@single@split^2 * #4}
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{#7}{#8}}
  \ge@addto@macro\spath@tmppath\spath@to@add
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@double@split}
%    \begin{macrocode}
\def\spath@double@split{.5}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@split@first@lineto}
%    \begin{macrocode}
\def\spath@split@first@lineto\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@linetotoken#3#4#5\relax{%
  \pgfmathsetmacro{\spath@sx}{(1-\spath@single@split)*#1 + \spath@single@split * #3}
  \pgfmathsetmacro{\spath@sy}{(1-\spath@single@split)*#2 + \spath@single@split * #4}
  \edef\spath@split@path@start{\noexpand\pgfsyssoftpath@movetotoken{#1}{#2}\noexpand\pgfsyssoftpath@linetotoken{\spath@sx     pt}{\spath@sy pt}\noexpand\pgfsyssoftpath@linetotoken{#3}{#4}}
  \edef\spath@split@path@end{\noexpand\pgfsyssoftpath@movetotoken{#3}{#4}}
  \g@addto@macro\spath@split@path@end{#5}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@split@second@lineto}
%    \begin{macrocode}
\def\spath@split@second@lineto\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@linetotoken#3#4#5\relax{%
  \pgfmathsetmacro{\spath@sx}{(1-\spath@single@split)*#1 + \spath@single@split * #3}
  \pgfmathsetmacro{\spath@sy}{(1-\spath@single@split)*#2 + \spath@single@split * #4}
  \edef\spath@split@path@end{\noexpand\pgfsyssoftpath@linetotoken{\spath@sx pt}{\spath@sy pt}\noexpand\pgfsyssoftpath@linetotoken{#3}{#4}}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@split@first@curveto}
%    \begin{macrocode}
\def\spath@split@first@curveto\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@curvetosupportatoken#3#4\pgfsyssoftpath@curvetosupportbtoken#5#6\pgfsyssoftpath@curvetotoken#7#8#9\relax{%
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@double@split)*#1 + \spath@double@split * #3}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@double@split)*#2 + \spath@double@split * #4}
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@double@split)^2 * #1 + 2*\spath@double@split * (1 - \spath@double@split) * #3 + \spath@double@split^2 * #5}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@double@split)^2 * #2 + 2*\spath@double@split * (1 - \spath@double@split) * #4 + \spath@double@split^2 * #6}
  \pgfmathsetmacro{\spath@ex}{(1 - \spath@double@split)^3 * #1 + 3*\spath@double@split * (1 - \spath@double@split)^2 * #3 + 3*\spath@double@split^2 * (1 - \spath@double@split) * #5 + \spath@double@split^3 * #7}
  \pgfmathsetmacro{\spath@ey}{(1 - \spath@double@split)^3 * #2 + 3*\spath@double@split * (1 - \spath@double@split)^2 * #4 + 3*\spath@double@split^2 * (1 - \spath@double@split) * #6 + \spath@double@split^3 * #8}
  \edef\spath@split@path@start{\noexpand\pgfsyssoftpath@movetotoken{#1}{#2}\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{\spath@ex pt}{\spath@ey pt}}
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@double@split)*#5 + \spath@double@split * #7}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@double@split)*#6 + \spath@double@split * #8}
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@double@split)^2 * #3 + 2*\spath@double@split * (1 - \spath@double@split) * #5 + \spath@double@split^2 * #7}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@double@split)^2 * #4 + 2*\spath@double@split * (1 - \spath@double@split) * #6 + \spath@double@split^2 * #8}
  
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{#7}{#8}}
  \ge@addto@macro\spath@split@path@start\spath@to@add
  \edef\spath@split@path@end{\noexpand\pgfsyssoftpath@movetotoken{#7}{#8}}
  \g@addto@macro\spath@split@path@end{#9}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\spath@split@second@curveto}
%    \begin{macrocode}
\def\spath@split@second@curveto\pgfsyssoftpath@movetotoken#1#2\pgfsyssoftpath@curvetosupportatoken#3#4\pgfsyssoftpath@curvetosupportbtoken#5#6\pgfsyssoftpath@curvetotoken#7#8#9\relax{%
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@double@split)*#1 + \spath@double@split * #3}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@double@split)*#2 + \spath@double@split * #4}
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@double@split)^2 * #1 + 2*\spath@double@split * (1 - \spath@double@split) * #3 + \spath@double@split^2 * #5}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@double@split)^2 * #2 + 2*\spath@double@split * (1 - \spath@double@split) * #4 + \spath@double@split^2 * #6}
  \pgfmathsetmacro{\spath@ex}{(1 - \spath@double@split)^3 * #1 + 3*\spath@double@split * (1 - \spath@double@split)^2 * #3 + 3*\spath@double@split^2 * (1 - \spath@double@split) * #5 + \spath@double@split^3 * #7}
  \pgfmathsetmacro{\spath@ey}{(1 - \spath@double@split)^3 * #2 + 3*\spath@double@split * (1 - \spath@double@split)^2 * #4 + 3*\spath@double@split^2 * (1 - \spath@double@split) * #6 + \spath@double@split^3 * #8}
  \edef\spath@split@path@end{\noexpand\pgfsyssoftpath@movetotoken{#1}{#2}\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{\spath@ex pt}{\spath@ey pt}}
  \ge@addto@macro\spath@split@path\spath@to@add
  \pgfmathsetmacro{\spath@dx}{(1 - \spath@double@split)*#5 + \spath@double@split * #7}
  \pgfmathsetmacro{\spath@dy}{(1 - \spath@double@split)*#6 + \spath@double@split * #8}
  \pgfmathsetmacro{\spath@cx}{(1 - \spath@double@split)^2 * #3 + 2*\spath@double@split * (1 - \spath@double@split) * #5 + \spath@double@split^2 * #7}
  \pgfmathsetmacro{\spath@cy}{(1 - \spath@double@split)^2 * #4 + 2*\spath@double@split * (1 - \spath@double@split) * #6 + \spath@double@split^2 * #8}
  
  \edef\spath@to@add{\noexpand\pgfsyssoftpath@curvetosupportatoken{\spath@cx     pt}{\spath@cy pt}\noexpand\pgfsyssoftpath@curvetosupportbtoken{\spath@dx pt}{\spath@dy pt}\noexpand\pgfsyssoftpath@curvetotoken{#7}{#8}}
  \ge@addto@macro\spath@split@path@end\spath@to@add
}
%    \end{macrocode}
% \end{macro}
% \iffalse
%</package>
% \fi
%
% \Finale

\endinput
